CS130 Project 2 - Design Document
=================================

Please answer all questions in this design document.  Note that the final
feedback section is optional, and you are not required to answer it if you
don't want to.

Unanswered or incompletely answered questions, or answers that don't actually
match the code/repository, will result in deductions.

Answers don't have to be deeply detailed!  We are mainly looking for an
overview or summary description of how your project works, and your team's
experiences working on this project.

Logistics (7 pts)
-----------------

L1.  [2pts] Enumerate all teammates here.
    Anushka Gupta
    Vinny Thai

L2.  [2pts] What did each teammate focus on during this project?
    Anushka focused on implementing the JSON saving and loading and cell notification.
    Vinny focused sheet manipulation and previous bugs from project 1.

L3.  [3pts] Approximately how many hours did each teammate spend on the project?
    Anushka spent 10 hours.
    Vinny spent 13.5 hours.

Spreadsheet Engine Design (10 pts)
----------------------------------

D1.  [3pts] Briefly describe how your workbook-loading code operates.  Does
     it do anything sophisticated to optimize the performance of loading a
     workbook, such as deferring cell-value update calculations, or analyzing
     the graph of cell dependencies?
    The load_workbook method loops through the given file data and adds each 
    sheet and its cell contents to the workbook.
    We have not yet done anything sophisticated to optimize its performance.

D2.  [3pts] Sheet-level operations like copying a sheet, deleting a sheet,
     renaming a sheet, or even creating a new sheet, can cause cell values
     to be updated.  How does your workbook identify such cells and ensure
     that they are updated properly?
    For deleting a sheet and renaming a sheet, the workbook takes all the
    cells for the affected sheet and looks at their dependencies to
    determine whether their dependencies needs to be updated such as 
    formula changes or updating values.
    For copying, creating, and renaming, the workbook stores a dictionary
    that keeps track of cells referencing a nonexistent sheet. If the new
    sheet matches the name, then the workbook updates their values.

D3.  [4pts] When renaming a sheet, cells with formulas that explicitly
     reference the renamed sheet must be updated with the new sheet name.
     Give an overview of how your implementation updates these formulas.
    When a sheet is renamed, a list of all the cells in the sheet are
    collected. For each cell, the cells directly referencing them are
    called to rename the sheet as they are the only cells to have
    an explicit reference to the renamed sheet. A lark.Transformer
    is used on their contents to rename the sheet if it is in the formula
    and remove unnecessary quotes.

Spreadsheet Engine Code Review (17 pts)
---------------------------------------

R1.  [2pts] What part of your spreadsheet code-base did your team select to
     review?  Why did you select this portion of your code to review?
    We selected to review the loop detection for our code review. The reason
    was that tis portion of the code base is the most complicated that both
    of us needed to understand for the performance test.

R2.  [2pts] Approximately how much code did your team review?  How much time did
     the meeting take?
    We reviewed the algorithm for our loop detection which is roughly 45 lines
    of code. The meeting took a little less than an hour to explain how Tarjan
    works and how to make it iterative.

R3.  [6pts] Include the list of action-items that were generated by the
     code-review here.
    Convert the recurvise part of the algorithm to be iterative.
    Add dictionary to record the nodes that have been visited but not yet
        left and their unexplored children.
    Change how time, setList, and other values are kept as attributes to be
        arguments that are passed.

R4.  [3pts] Have you been able to address the action items identified?  If not,
     what is your plan and timeframe to do so?
    We have not address the items as they are plans for later into the project
    when it becomes necessary to convert the Tarjan algorithm from recursive to
    iterative.

R5.  [4pts] Reflect on whether the code review helped with knowledge-sharing in
     the team.  Do teammates feel more confident maintaining the code that was
     reviewed, and/or extending the code in the future?
    We all have a better understanding of the Tarjan algorithm. We are confident
    that we can make the channge to an iterative process in the future when required
    for the project.

Performance Analysis (16 pts)
-----------------------------

In this project you must measure and analyze the performance of two central
areas of your spreadsheet engine.  Using pair programming, construct some
performance tests to exercise these aspects of your engine, and use a profiler
to identify where your program is spending the bulk of its time.

A1.  [4pts] Briefly enumerate the performance tests you created to exercise
     your implementation, along with the teammates that collaborated to
     implement each of them.
    Anushka and Vinny immplemented all of the performance tests together.
        Chain reference
        Several short references
        Long looped reference
        Several short loop references
        Make one short loop and break the loop
        Make several short loops and breaks all of them

A2.  [2pts] What profiler did you choose to run your performance tests with?
     Why?  Give an example of how to invoke one of your tests with the profiler.
    We chose to use cProfiler as it was the first one recommended and had a nice
    documentation page.
    From sheets, we run the command
        "python .\tests\reference_performance.py"
    which runs a series of function with profilers to records the stats and prints
    them.


A3.  [6pts] What are ~3 of the most significant hot-spots you identified in your
     performance testing?  Did you expect these hot-spots, or were they
     surprising to you?
    Our hotspots were
        SCCUtil
        _check_for_loop
        _loc_to_tuple
    SCCUtil was expected as it is our recursive function for loop detection.
    _check_for_loop was also not surprising since it checks all cells that
    may be involved in a loop.
    _loc_to_tuple is surprising as it suppose to only convert location to
    some numerical values.

A4.  [4pts] Reflect on the experience of pair-programming as you constructed
     these tests.  What went well with it?  What would you like to try to do
     better in the future?
    The pair-programming was new to both of us and was awkward to start. Difference
    in computer OS made it difficult to code on the each other's machine. Vinny
    found it difficult to know what to discuss while the other Anushka coded.
    Anushka would like to have more explicit goals during the coding session than
    just writing performance tests.
    However, while coding it felt that both of us had a better understanding of 
    the profiler as we worked and talked about it throughout the programming.

Section F:  CS130 Project 2 Feedback [OPTIONAL]
-----------------------------------------------

These questions are OPTIONAL, and you do not need to answer them.  Your grade
will not be affected by answering or not answering them.  Also, your grade will
not be affected by negative feedback - we want to know what went poorly so that
we can improve future versions of the course.

F1.  What parts of the assignment did you find highly enjoyable?  Conversely,
     what parts of the assignment did you find unenjoyable?


F2.  What parts of the assignment helped you learn more about software
     engineering best-practices, or other useful development skills?
     What parts were not helpful in learning these skills?


F3.  Were there any parts of the assignment that seemed _unnecessarily_ tedious?
     (Some parts of software development are always tedious, of course.)


F4.  Do you have any feedback and/or constructive criticism about how this
     project can be made better in future iterations of CS130?
